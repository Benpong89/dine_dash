!function(r){var e={};function t(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return r[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=r,t.c=e,t.d=function(r,e,n){t.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:n})},t.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},t.t=function(r,e){if(1&e&&(r=t(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var o in r)t.d(n,o,function(e){return r[e]}.bind(null,o));return n},t.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return t.d(e,"a",e),e},t.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},t.p="",t(t.s=0)}([function(r,e,t){const n=t(1);window.$b=(r=>{switch(typeof r){case"function":return registerDocReadyCallback(r);case"string":return getNodesFromDOM(r);case"object":if(r instanceof HTMLElement)return new n([r])}}),getNodesFromDOM=(r=>{const e=document.querySelectorAll(r),t=Array.from(e);return new n(t)}),registerDocReadyCallback=(r=>{_docReady?r():_docReadyCallbacks.push(r)})},function(r,e){class t{constructor(r){this.array=r}html(r){if("string"==typeof r)this.array.forEach(e=>{e.innerHTML=r});else if(this.array.length>0)return this.array[0].innerHTML}empty(){this.html("")}append(r){this.array.forEach(e=>{e.innerHTML+=r})}attr(r,e){if("string"!=typeof e)return this.array[0].getAttribute(r);this.array.forEach(t=>t.setAttribute(r,e))}addClass(r){this.array.forEach(e=>e.classList.add(r))}removeClass(r){this.array.forEach(e=>e.classList.remove(r))}remove(){this.array.forEach(r=>r.parentNode.removeChild(r))}children(){let r=[];return this.array.forEach(e=>{const t=e.children;r=r.concat(Array.from(t))}),new t(r)}find(r){let e=[];return this.array.forEach(t=>{const n=t.querySelectorAll(r);e=e.concat(Array.from(n))}),new t(e)}on(r,e){this.array.forEach(t=>{t.addEventListener(r,e);const n=`jberryEvents-${r}`;void 0===t[n]&&(t[n]=[]),t[n].push(e)})}off(r){this.array.forEach(e=>{const t=`jberryEvents-${r}`;e[t]&&e[t].forEach(t=>{e.removeEventListener(r,t)}),e[t]=[]})}}r.exports=t}]);
//# sourceMappingURL=dineDash.js.map